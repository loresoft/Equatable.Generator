// <auto-generated />
#nullable enable

namespace Equatable.Entities
{
    partial struct StatusReadOnly : global::System.IEquatable<global::Equatable.Entities.StatusReadOnly>
    {
        /// <inheritdoc />
        public bool Equals(global::Equatable.Entities.StatusReadOnly other)
        {
            return Id == other.Id
                && global::System.Collections.Generic.EqualityComparer<global::System.String>.Default.Equals(Name, other.Name)
                && global::System.Collections.Generic.EqualityComparer<global::System.String?>.Default.Equals(Description, other.Description)
                && DisplayOrder == other.DisplayOrder
                && IsActive == other.IsActive;

        }

        /// <inheritdoc />
        public override bool Equals(object? obj)
        {
            return obj is global::Equatable.Entities.StatusReadOnly instance && Equals(instance);
        }

        /// <inheritdoc />
        public static bool operator ==(global::Equatable.Entities.StatusReadOnly left, global::Equatable.Entities.StatusReadOnly right)
        {
            return global::System.Collections.Generic.EqualityComparer<global::Equatable.Entities.StatusReadOnly>.Default.Equals(left, right);
        }

        /// <inheritdoc />
        public static bool operator !=(global::Equatable.Entities.StatusReadOnly left, global::Equatable.Entities.StatusReadOnly right)
        {
            return !(left == right);
        }

        /// <inheritdoc />
        public override int GetHashCode(){
            int hashCode = -637655923;
            hashCode = (hashCode * -1521134295) + Id.GetHashCode();
            hashCode = (hashCode * -1521134295) + global::System.Collections.Generic.EqualityComparer<global::System.String>.Default.GetHashCode(Name!);
            hashCode = (hashCode * -1521134295) + global::System.Collections.Generic.EqualityComparer<global::System.String?>.Default.GetHashCode(Description!);
            hashCode = (hashCode * -1521134295) + DisplayOrder.GetHashCode();
            hashCode = (hashCode * -1521134295) + IsActive.GetHashCode();
            return hashCode;

        }

    }
}
