// <auto-generated />
#nullable enable

namespace Equatable.Entities
{
    partial class User : global::System.IEquatable<User?>
    {
        /// <inheritdoc />
        public bool Equals(User? other)
        {
            return other is not null
                && global::System.Collections.Generic.EqualityComparer<int>.Default.Equals(Id, other.Id)
                && global::System.Collections.Generic.EqualityComparer<string?>.Default.Equals(FirstName, other.FirstName)
                && global::System.Collections.Generic.EqualityComparer<string?>.Default.Equals(LastName, other.LastName)
                && global::System.StringComparer.OrdinalIgnoreCase.Equals(EmailAddress, other.EmailAddress)
                && global::System.Collections.Generic.EqualityComparer<System.DateTimeOffset>.Default.Equals(Created, other.Created)
                && SequenceEquals(Roles, other.Roles);

            static bool SequenceEquals<T>(global::System.Collections.Generic.IEnumerable<T>? left, global::System.Collections.Generic.IEnumerable<T>? right)
            {
                if (global::System.Object.ReferenceEquals(left, right))
                    return true;

                if (left == null || right == null)
                    return false;

                return global::System.Linq.Enumerable.SequenceEqual(left, right, global::System.Collections.Generic.EqualityComparer<T>.Default);
            }

        }

        /// <inheritdoc />
        public override bool Equals(object? obj)
        {
            return Equals(obj as User);
        }

        /// <inheritdoc />
        public static bool operator ==(User? left, User? right)
        {
            return global::System.Collections.Generic.EqualityComparer<User?>.Default.Equals(left, right);
        }

        /// <inheritdoc />
        public static bool operator !=(User? left, User? right)
        {
            return !(left == right);
        }

        /// <inheritdoc />
        public override int GetHashCode(){
            int hashCode = -1758092530;
            hashCode = (hashCode * -1521134295) + global::System.Collections.Generic.EqualityComparer<int>.Default.GetHashCode(Id!);
            hashCode = (hashCode * -1521134295) + global::System.Collections.Generic.EqualityComparer<string?>.Default.GetHashCode(FirstName!);
            hashCode = (hashCode * -1521134295) + global::System.Collections.Generic.EqualityComparer<string?>.Default.GetHashCode(LastName!);
            hashCode = (hashCode * -1521134295) + global::System.StringComparer.OrdinalIgnoreCase.GetHashCode(EmailAddress!);
            hashCode = (hashCode * -1521134295) + global::System.Collections.Generic.EqualityComparer<System.DateTimeOffset>.Default.GetHashCode(Created!);
            hashCode = (hashCode * -1521134295) + SequenceHashCode(Roles);
            return hashCode;

            static int SequenceHashCode<T>(global::System.Collections.Generic.IEnumerable<T>? items)
            {
                if (items == null)
                    return 0;

                int hashCode = -1758092530;

                foreach (var item in items)
                    hashCode = (hashCode * -1521134295) + global::System.Collections.Generic.EqualityComparer<T>.Default.GetHashCode(item!);

                return hashCode;
            }

        }

    }
}
